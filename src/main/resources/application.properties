spring.application.name=user-service
server.port=8081
# -------------------------------
# Database configuration (PostgresSQL)
# -------------------------------
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/userdb
spring.datasource.username=postgres
spring.datasource.password=postgres
#---JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# -------------------------------
# Security Configuration
# -------------------------------
# Security OAuth2 Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8085/realms/app-mflibrary
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
# JWT Config
jwt.auth.converter.resourceId=mflibrary-user-service
jwt.auth.converter.principalAttribute=principal_username
logging.level.org.springframework.security=trace
# -------------------------------
# Eureka client Configuration
# -------------------------------
#--- Register with Eureka and send heartbeats
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#--- Adjust the heartbeat interval
eureka.instance.lease-renewal-interval-in-seconds=15
eureka.instance.lease-expiration-duration-in-seconds=90
# -------------------------------
# Kafka Configuration
# -------------------------------
#- Configure producer
#--- Kafka Broker
spring.kafka.bootstrap-servers=localhost:9092
#--- Configure producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#--- Configure consumer
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#--- Prevent application from failing if topics don't exist
spring.kafka.listener.missing-topics-fatal=false
